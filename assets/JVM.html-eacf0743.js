const e=JSON.parse('{"key":"v-f9c60fc2","path":"/jvm/JVM.html","title":"JVM——Java虚拟机详解","lang":"zh-CN","frontmatter":{"title":"JVM——Java虚拟机详解","date":"2023-05-15T00:54:26.000Z","category":["JVM"],"tag":["JVM"],"description":"JVM概览 常见JVM 武林盟主:HotSpot VM 相信所有Java程序员都听说过HotSpot 虚拟机，它是Sun/OracleJDK和OpenJDK中的默认Java虚拟机，也是目前使用范围最广的Java 虚拟机。但不一定所有人都知道的是，这个在今天看起来“血统纯正”的虚拟机在最初并非由Sun公司所开发，而是由一家名为“Longview Technologies”的小公司设计。HotSpot既继承了Sun之前两款商用虚拟机（Classic VM和Exact VM）的优点,也有许多自己新的技术优势，如它名称中的HotSpot 指的就是它的热点代码探测技术。","head":[["meta",{"property":"og:url","content":"https://littlebai118.github.io/jvm/JVM.html"}],["meta",{"property":"og:site_name","content":"白先生"}],["meta",{"property":"og:title","content":"JVM——Java虚拟机详解"}],["meta",{"property":"og:description","content":"JVM概览 常见JVM 武林盟主:HotSpot VM 相信所有Java程序员都听说过HotSpot 虚拟机，它是Sun/OracleJDK和OpenJDK中的默认Java虚拟机，也是目前使用范围最广的Java 虚拟机。但不一定所有人都知道的是，这个在今天看起来“血统纯正”的虚拟机在最初并非由Sun公司所开发，而是由一家名为“Longview Technologies”的小公司设计。HotSpot既继承了Sun之前两款商用虚拟机（Classic VM和Exact VM）的优点,也有许多自己新的技术优势，如它名称中的HotSpot 指的就是它的热点代码探测技术。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://littlebai118.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T00:25:02.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JVM——Java虚拟机详解"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2023-05-15T00:54:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-15T00:25:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM——Java虚拟机详解\\",\\"image\\":[\\"https://littlebai118.github.io/\\"],\\"datePublished\\":\\"2023-05-15T00:54:26.000Z\\",\\"dateModified\\":\\"2023-05-15T00:25:02.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"常见JVM","slug":"常见jvm","link":"#常见jvm","children":[]},{"level":2,"title":"JVM文档","slug":"jvm文档","link":"#jvm文档","children":[]},{"level":2,"title":"程序计数器（PC Register）","slug":"程序计数器-pc-register","link":"#程序计数器-pc-register","children":[]},{"level":2,"title":"虚拟机栈（JVM Stacks）","slug":"虚拟机栈-jvm-stacks","link":"#虚拟机栈-jvm-stacks","children":[{"level":3,"title":"相关定义","slug":"相关定义","link":"#相关定义","children":[]},{"level":3,"title":"栈内存溢出","slug":"栈内存溢出","link":"#栈内存溢出","children":[]},{"level":3,"title":"线程诊断","slug":"线程诊断","link":"#线程诊断","children":[]}]},{"level":2,"title":"本地方法栈（Native Method Stacks）","slug":"本地方法栈-native-method-stacks","link":"#本地方法栈-native-method-stacks","children":[]},{"level":2,"title":"堆（Heap）","slug":"堆-heap","link":"#堆-heap","children":[{"level":3,"title":"堆内存溢出","slug":"堆内存溢出","link":"#堆内存溢出","children":[]},{"level":3,"title":"堆内存诊断","slug":"堆内存诊断","link":"#堆内存诊断","children":[]}]},{"level":2,"title":"方法区（Method Area）","slug":"方法区-method-area","link":"#方法区-method-area","children":[{"level":3,"title":"方法区内存溢出","slug":"方法区内存溢出","link":"#方法区内存溢出","children":[]},{"level":3,"title":"常量池","slug":"常量池","link":"#常量池","children":[]},{"level":3,"title":"运行时常量池","slug":"运行时常量池","link":"#运行时常量池","children":[]},{"level":3,"title":"StringTable（String Pool）","slug":"stringtable-string-pool","link":"#stringtable-string-pool","children":[]}]},{"level":2,"title":"直接内存","slug":"直接内存","link":"#直接内存","children":[{"level":3,"title":"直接内存的内存溢出","slug":"直接内存的内存溢出","link":"#直接内存的内存溢出","children":[]},{"level":3,"title":"直接内存的释放原理","slug":"直接内存的释放原理","link":"#直接内存的释放原理","children":[]},{"level":3,"title":"禁用显示内存回收对直接内存的影响","slug":"禁用显示内存回收对直接内存的影响","link":"#禁用显示内存回收对直接内存的影响","children":[]}]},{"level":2,"title":"判断对象是否可以回收","slug":"判断对象是否可以回收","link":"#判断对象是否可以回收","children":[{"level":3,"title":"引用计数法","slug":"引用计数法","link":"#引用计数法","children":[]},{"level":3,"title":"可达性分析算法","slug":"可达性分析算法","link":"#可达性分析算法","children":[]},{"level":3,"title":"四种引用","slug":"四种引用","link":"#四种引用","children":[]}]},{"level":2,"title":"垃圾回收算法","slug":"垃圾回收算法","link":"#垃圾回收算法","children":[{"level":3,"title":"标记-清除算法","slug":"标记-清除算法","link":"#标记-清除算法","children":[]},{"level":3,"title":"标记-复制算法","slug":"标记-复制算法","link":"#标记-复制算法","children":[]},{"level":3,"title":"标记-整理算法","slug":"标记-整理算法","link":"#标记-整理算法","children":[]}]},{"level":2,"title":"分带收集理论","slug":"分带收集理论","link":"#分带收集理论","children":[{"level":3,"title":"新生代的垃圾回收","slug":"新生代的垃圾回收","link":"#新生代的垃圾回收","children":[]},{"level":3,"title":"老年代的垃圾回收","slug":"老年代的垃圾回收","link":"#老年代的垃圾回收","children":[]},{"level":3,"title":"一个线程OOM，同一个进程里另一个线程还会正常运行吗？","slug":"一个线程oom-同一个进程里另一个线程还会正常运行吗","link":"#一个线程oom-同一个进程里另一个线程还会正常运行吗","children":[]}]},{"level":2,"title":"经典垃圾收集器","slug":"经典垃圾收集器","link":"#经典垃圾收集器","children":[{"level":3,"title":"新生代收集器","slug":"新生代收集器","link":"#新生代收集器","children":[]},{"level":3,"title":"老年代收集器","slug":"老年代收集器","link":"#老年代收集器","children":[]},{"level":3,"title":"Garbage First(G1) 收集器","slug":"garbage-first-g1-收集器","link":"#garbage-first-g1-收集器","children":[]}]},{"level":2,"title":"内存分配与回收的基本流程","slug":"内存分配与回收的基本流程","link":"#内存分配与回收的基本流程","children":[]},{"level":2,"title":"一次典型的对象内存分配和回收周期","slug":"一次典型的对象内存分配和回收周期","link":"#一次典型的对象内存分配和回收周期","children":[]},{"level":2,"title":"类文件结构","slug":"类文件结构","link":"#类文件结构","children":[{"level":3,"title":"魔数（magic）","slug":"魔数-magic","link":"#魔数-magic","children":[]}]},{"level":2,"title":"JavaP工具","slug":"javap工具","link":"#javap工具","children":[]}],"git":{"createdTime":1684083331000,"updatedTime":1684110302000,"contributors":[{"name":"baixuanyu","email":"baixy118@163.com","commits":3}]},"readingTime":{"minutes":63.08,"words":18923},"filePathRelative":"jvm/JVM.md","localizedDate":"2023年5月15日","excerpt":"<h1> JVM概览</h1>\\n<figure><figcaption></figcaption></figure>\\n<h2> 常见JVM</h2>\\n<figure><figcaption></figcaption></figure>\\n<p><strong>武林盟主:HotSpot VM</strong>\\n相信所有Java程序员都听说过HotSpot 虚拟机，它是Sun/OracleJDK和OpenJDK中的默认Java虚拟机，也是目前使用范围最广的Java 虚拟机。但不一定所有人都知道的是，这个在今天看起来“血统纯正”的虚拟机在最初并非由Sun公司所开发，而是由一家名为“Longview Technologies”的小公司设计。HotSpot既继承了Sun之前两款商用虚拟机（Classic VM和Exact VM）的优点,也有许多自己新的技术优势，如它名称中的HotSpot 指的就是它的热点代码探测技术。</p>","autoDesc":true}');export{e as data};
